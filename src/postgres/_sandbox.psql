-- select exists (select from public.cal_actual)

with params as (
  select
    10 as prior_years
    , 50 as future_years
)
, calcs as (
    select
        *
        , (date_trunc('year', current_date) - interval '1 year' * (1 + prior_years))::date as start_date
        , (date_trunc('year', current_date) + interval '1 year' * (2 + future_years))::date - 1 as end_date

    from params
)
select * from calcs
;

/* define a CTE that will generate a table with a single column of sequential numbers and the exact number of rows as dates in our year range */
; WITH InfiniteRows (RowNumber) AS (
   -- Anchor member definition
   SELECT 1 AS RowNumber
   UNION ALL
   -- Recursive member definition
   SELECT a.RowNumber + 1 AS RowNumber
   FROM   InfiniteRows a
   WHERE  a.RowNumber <= @qtyRows
)

/* Execute the CTE and populate a temp table with a row for each date in our range */
SELECT  dateadd(dd,RowNumber-1,@startDate) as datekey

into    #date_rows
FROM    InfiniteRows
OPTION  (MAXRECURSION 0) --careful, but def ok for 50k rows
; 